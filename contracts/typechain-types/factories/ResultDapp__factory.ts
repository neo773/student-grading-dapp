/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { ResultDapp, ResultDappInterface } from "../ResultDapp";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_batchId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_studentRecordsRoot",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "IPFSHash",
        type: "string",
      },
    ],
    name: "addBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addressToWhitelist",
        type: "address",
      },
    ],
    name: "addUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addressToUnwhitelist",
        type: "address",
      },
    ],
    name: "deleteUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_batchId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_newBatchRoot",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "IPFSHash",
        type: "string",
      },
    ],
    name: "editBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllBatches",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "batchId",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "studentRecordsRoot",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "IPFSHash",
            type: "string",
          },
        ],
        internalType: "struct ResultDapp.Batch[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllWhitelistedAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_batchId",
        type: "uint256",
      },
    ],
    name: "getBatch",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "batchId",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "studentRecordsRoot",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "IPFSHash",
            type: "string",
          },
        ],
        internalType: "struct ResultDapp.Batch",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_batchId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_leaf",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "verifyStudentRecord",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "verifyUser",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611b06806100616000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80635c60f226116100665780635c60f2261461013057806375a731a01461014c578063b56eebfb1461017c578063d1c0c3b51461019a578063e80e076b146101b657610093565b80630998c0ed14610098578063421b2d8b146100b45780634d813120146100d05780635ac4428214610100575b600080fd5b6100b260048036038101906100ad9190610f3d565b6101d4565b005b6100ce60048036038101906100c9919061100a565b610360565b005b6100ea60048036038101906100e5919061100a565b610456565b6040516100f79190611052565b60405180910390f35b61011a6004803603810190610115919061106d565b61055f565b6040516101279190611187565b60405180910390f35b61014a6004803603810190610145919061100a565b6106a9565b005b61016660048036038101906101619190611271565b6108f7565b6040516101739190611052565b60405180910390f35b610184610999565b604051610191919061139e565b60405180910390f35b6101b460048036038101906101af9190610f3d565b610a27565b005b6101be610b9f565b6040516101cb91906114d2565b60405180910390f35b336101de81610456565b806102365750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610275576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026c90611551565b60405180910390fd5b60006001600086815260200190815260200160002054146102cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c2906115bd565b60405180910390fd5b600060405180606001604052808681526020018581526020018481525090806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000015560208201518160010155604082015181600201908161033a91906117e9565b505050600080549050600160008681526020019081526020016000208190555050505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e790611907565b60405180910390fd5b6002819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104b6576001905061055a565b60005b600280549050811015610554578273ffffffffffffffffffffffffffffffffffffffff16600282815481106104f1576104f0611927565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361054157600191505061055a565b808061054c90611985565b9150506104b9565b50600090505b919050565b610567610d53565b600060016000848152602001908152602001600020549050600081036105c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b990611a19565b60405180910390fd5b60006001826105d19190611a39565b815481106105e2576105e1611927565b5b9060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201805461061f9061160c565b80601f016020809104026020016040519081016040528092919081815260200182805461064b9061160c565b80156106985780601f1061066d57610100808354040283529160200191610698565b820191906000526020600020905b81548152906001019060200180831161067b57829003601f168201915b505050505081525050915050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610739576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073090611907565b60405180910390fd5b60005b6002805490508110156108f3578173ffffffffffffffffffffffffffffffffffffffff166002828154811061077457610773611927565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036108e05760008190505b60016002805490506107d29190611a39565b8110156108935760026001826107e89190611a6d565b815481106107f9576107f8611927565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166002828154811061083857610837611927565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808061088b90611985565b9150506107c0565b5060028054806108a6576108a5611aa1565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556108f3565b80806108eb90611985565b91505061073c565b5050565b6000806001600086815260200190815260200160002054905060008103610953576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094a90611a19565b60405180910390fd5b61098f8360006001846109669190611a39565b8154811061097757610976611927565b5b90600052602060002090600302016001015486610ca4565b9150509392505050565b60606002805480602002602001604051908101604052809291908181526020018280548015610a1d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116109d3575b5050505050905090565b33610a3181610456565b80610a895750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610ac8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abf90611551565b60405180910390fd5b60006001600086815260200190815260200160002054905060008103610b23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1a90611a19565b60405180910390fd5b836000600183610b339190611a39565b81548110610b4457610b43611927565b5b906000526020600020906003020160010181905550826000600183610b699190611a39565b81548110610b7a57610b79611927565b5b90600052602060002090600302016002019081610b9791906117e9565b505050505050565b60606000805480602002602001604051908101604052809291908181526020016000905b82821015610c9b57838290600052602060002090600302016040518060600160405290816000820154815260200160018201548152602001600282018054610c0a9061160c565b80601f0160208091040260200160405190810160405280929190818152602001828054610c369061160c565b8015610c835780601f10610c5857610100808354040283529160200191610c83565b820191906000526020600020905b815481529060010190602001808311610c6657829003601f168201915b50505050508152505081526020019060010190610bc3565b50505050905090565b600082610cb18584610cbb565b1490509392505050565b60008082905060005b8451811015610d0657610cf182868381518110610ce457610ce3611927565b5b6020026020010151610d11565b91508080610cfe90611985565b915050610cc4565b508091505092915050565b6000818310610d2957610d248284610d3c565b610d34565b610d338383610d3c565b5b905092915050565b600082600052816020526040600020905092915050565b60405180606001604052806000815260200160008019168152602001606081525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610d9e81610d8b565b8114610da957600080fd5b50565b600081359050610dbb81610d95565b92915050565b6000819050919050565b610dd481610dc1565b8114610ddf57600080fd5b50565b600081359050610df181610dcb565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610e4a82610e01565b810181811067ffffffffffffffff82111715610e6957610e68610e12565b5b80604052505050565b6000610e7c610d77565b9050610e888282610e41565b919050565b600067ffffffffffffffff821115610ea857610ea7610e12565b5b610eb182610e01565b9050602081019050919050565b82818337600083830152505050565b6000610ee0610edb84610e8d565b610e72565b905082815260208101848484011115610efc57610efb610dfc565b5b610f07848285610ebe565b509392505050565b600082601f830112610f2457610f23610df7565b5b8135610f34848260208601610ecd565b91505092915050565b600080600060608486031215610f5657610f55610d81565b5b6000610f6486828701610dac565b9350506020610f7586828701610de2565b925050604084013567ffffffffffffffff811115610f9657610f95610d86565b5b610fa286828701610f0f565b9150509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fd782610fac565b9050919050565b610fe781610fcc565b8114610ff257600080fd5b50565b60008135905061100481610fde565b92915050565b6000602082840312156110205761101f610d81565b5b600061102e84828501610ff5565b91505092915050565b60008115159050919050565b61104c81611037565b82525050565b60006020820190506110676000830184611043565b92915050565b60006020828403121561108357611082610d81565b5b600061109184828501610dac565b91505092915050565b6110a381610d8b565b82525050565b6110b281610dc1565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156110f25780820151818401526020810190506110d7565b60008484015250505050565b6000611109826110b8565b61111381856110c3565b93506111238185602086016110d4565b61112c81610e01565b840191505092915050565b600060608301600083015161114f600086018261109a565b50602083015161116260208601826110a9565b506040830151848203604086015261117a82826110fe565b9150508091505092915050565b600060208201905081810360008301526111a18184611137565b905092915050565b600067ffffffffffffffff8211156111c4576111c3610e12565b5b602082029050602081019050919050565b600080fd5b60006111ed6111e8846111a9565b610e72565b905080838252602082019050602084028301858111156112105761120f6111d5565b5b835b8181101561123957806112258882610de2565b845260208401935050602081019050611212565b5050509392505050565b600082601f83011261125857611257610df7565b5b81356112688482602086016111da565b91505092915050565b60008060006060848603121561128a57611289610d81565b5b600061129886828701610dac565b93505060206112a986828701610de2565b925050604084013567ffffffffffffffff8111156112ca576112c9610d86565b5b6112d686828701611243565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61131581610fcc565b82525050565b6000611327838361130c565b60208301905092915050565b6000602082019050919050565b600061134b826112e0565b61135581856112eb565b9350611360836112fc565b8060005b83811015611391578151611378888261131b565b975061138383611333565b925050600181019050611364565b5085935050505092915050565b600060208201905081810360008301526113b88184611340565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000606083016000830151611404600086018261109a565b50602083015161141760208601826110a9565b506040830151848203604086015261142f82826110fe565b9150508091505092915050565b600061144883836113ec565b905092915050565b6000602082019050919050565b6000611468826113c0565b61147281856113cb565b935083602082028501611484856113dc565b8060005b858110156114c057848403895281516114a1858261143c565b94506114ac83611450565b925060208a01995050600181019050611488565b50829750879550505050505092915050565b600060208201905081810360008301526114ec818461145d565b905092915050565b600082825260208201905092915050565b7f596f75206e65656420746f2062652077686974656c6973746564000000000000600082015250565b600061153b601a836114f4565b915061154682611505565b602082019050919050565b6000602082019050818103600083015261156a8161152e565b9050919050565b7f426174636820616c726561647920657869737473000000000000000000000000600082015250565b60006115a76014836114f4565b91506115b282611571565b602082019050919050565b600060208201905081810360008301526115d68161159a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061162457607f821691505b602082108103611637576116366115dd565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261169f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611662565b6116a98683611662565b95508019841693508086168417925050509392505050565b6000819050919050565b60006116e66116e16116dc84610d8b565b6116c1565b610d8b565b9050919050565b6000819050919050565b611700836116cb565b61171461170c826116ed565b84845461166f565b825550505050565b600090565b61172961171c565b6117348184846116f7565b505050565b5b818110156117585761174d600082611721565b60018101905061173a565b5050565b601f82111561179d5761176e8161163d565b61177784611652565b81016020851015611786578190505b61179a61179285611652565b830182611739565b50505b505050565b600082821c905092915050565b60006117c0600019846008026117a2565b1980831691505092915050565b60006117d983836117af565b9150826002028217905092915050565b6117f2826110b8565b67ffffffffffffffff81111561180b5761180a610e12565b5b611815825461160c565b61182082828561175c565b600060209050601f8311600181146118535760008415611841578287015190505b61184b85826117cd565b8655506118b3565b601f1984166118618661163d565b60005b8281101561188957848901518255600182019150602085019450602081019050611864565b868310156118a657848901516118a2601f8916826117af565b8355505b6001600288020188555050505b505050505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006118f16020836114f4565b91506118fc826118bb565b602082019050919050565b60006020820190508181036000830152611920816118e4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061199082610d8b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036119c2576119c1611956565b5b600182019050919050565b7f4261746368206e6f7420666f756e640000000000000000000000000000000000600082015250565b6000611a03600f836114f4565b9150611a0e826119cd565b602082019050919050565b60006020820190508181036000830152611a32816119f6565b9050919050565b6000611a4482610d8b565b9150611a4f83610d8b565b9250828203905081811115611a6757611a66611956565b5b92915050565b6000611a7882610d8b565b9150611a8383610d8b565b9250828201905080821115611a9b57611a9a611956565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212201f5514916a56fa70084803a4ba3f074f8d3985bef9268195e26c2384119f708164736f6c63430008100033";

type ResultDappConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ResultDappConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ResultDapp__factory extends ContractFactory {
  constructor(...args: ResultDappConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ResultDapp> {
    return super.deploy(overrides || {}) as Promise<ResultDapp>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ResultDapp {
    return super.attach(address) as ResultDapp;
  }
  override connect(signer: Signer): ResultDapp__factory {
    return super.connect(signer) as ResultDapp__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ResultDappInterface {
    return new utils.Interface(_abi) as ResultDappInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ResultDapp {
    return new Contract(address, _abi, signerOrProvider) as ResultDapp;
  }
}
